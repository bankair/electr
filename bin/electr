#!/usr/bin/env ruby

require 'electr'

opt = Electr::Option.new

if opt[:expression]
  if opt[:ast]
    ast = Electr::Compiler.compile_to_ast(opt[:expression])
    ast.display
  else
    # FIXME Should be under lib/ to be tested and there is a lot of
    # common code with Repl.
    temp = Electr::Compiler.compile_to_pn(opt[:expression])
    evaluator = Electr::Evaluator.new
    temp = evaluator.evaluate_pn(temp)
    if temp == temp.truncate
      puts temp.truncate
    else
      puts temp.round(10)
    end
  end
else
  if opt[:ast]
    Electr::Repl.new(Electr::ASTReader.new, Electr::NilEvaluator.new,
                     Electr::ASTPrinter).run
  else
    Electr::Repl.new.run
  end
end
